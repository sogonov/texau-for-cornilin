//Замена в массиве заданного символа на цепочку из двух заданных символов
#include "windows.h"
#include "stdio.h"
char In[127],Out[256]; int N;
int APIENTRY WinMain( HINSTANCE hInstance, HINSTANCE hPrevInstance,
LPSTR lpCmdLine, int nCmdShow )
{	
	sprintf(In,"исходная строка"); //исходная строка
	N=strlen(In); //длина строки
	_asm //подключение ассемблерной вставки
	{  CLD                    ;cброс флага направления (DF), установка в 0. 
			                      ;при флаге DF=0 строки обрабатываются в сторону увеличения адресов
		xor ecx,ecx       ;сброс ecx
		lea esi, In          ;копирование в esi(регистра источника) адреса массива In
		lea edi, Out       ;копирование в edi(регистра приемника) адреса массива Out
		mov al,'а'           ;Искомый символ

		m_begin:      
			or al,0                ;очистка флага zf    	          
			MOV ah, [esi]    ;копируем байт из исходной строки в регистр ah
			inc esi       
			inc ecx
			cmp ah,al        ;cравниваем байт с искомым
		jz m_replace	    ;при совпадении с искомым переход к метке
		                              ;при несовпадении продолжаем выполнять код
		MOV [edi],ah      ;копируем байт в приемник из регистра ah
		inc edi                 ;инкрементируем индексный регистр на следующий байт 
		CMP ecx,N          ;cравниваем значение ecx и длины исходной строки
		jnz m_begin        ;пока zf не равно 0, возвращаемся к метке начала
		jz m_end             ;когда zf равно 0 переходим к метке конца

		m_replace:	
			mov byte ptr [edi] ,'='       ;записываем первый символ для замены
			inc edi                                ;сдвигаемся дальше
			mov byte ptr [edi] ,'+'       ;записываем второй символ
			inc edi                 ;
		CMP ecx,N                             ;cравниваем значение ecx и длины исходной строки
		jnz m_begin                           ;если строка не завершена, возвращаемся к началу(zf не ноль)
                                                      ;иначе продолжаем 
		m_end: 
		mov byte ptr [edi] ,0            ;дописываем завершающий нуль
	 }
	MessageBox(NULL,Out,"Результат",MB_OK);
	 return 1;
}